plugins {
    id 'com.android.application'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.example.placesdemo"
        minSdkVersion 21
        targetSdkVersion 34
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.example.placesdemo'

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.6'
    implementation 'androidx.navigation:navigation-ui:2.7.6'
    implementation "androidx.activity:activity:1.8.2"
    implementation "androidx.fragment:fragment:1.6.2"
    implementation 'com.android.volley:volley:1.2.1'
    implementation "com.github.bumptech.glide:glide:4.16.0"
    implementation "com.android.databinding:viewbinding:8.2.2"

    // Places and Maps SDKs
    implementation 'com.google.android.libraries.places:places:3.3.0'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.maps.android:android-maps-utils:3.8.0'
}

secrets {
    // To add your Google Maps Platform API key to this project:
    // 1. Copy local.defaults.properties to secrets.properties
    // 2. In the secrets.properties file, replace PLACES_API_KEY=DEFAULT_API_KEY with a key from a
    //    project with Places API enabled
    // 3. In the secrets.properties file, replace MAPS_API_KEY=DEFAULT_API_KEY with a key from a
    //    project with Maps SDK for Android enabled (can be the same project and key as in Step 2)
    defaultPropertiesFileName 'local.defaults.properties'

    // Optionally specify a different file name containing your secrets.
    // The plugin defaults to "local.properties"
    propertiesFileName = "secrets.properties"
}
